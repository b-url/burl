openapi: 3.0.0
info:
  title: burl API
  version: v1
tags: []
paths:
  /users/{userId}/collections:
    post:
      operationId: Collections_create
      description: Create a collection
      parameters:
        - $ref: '#/components/parameters/CollectionParentKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        '201':
          description: Resource create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionCreate'
  /users/{userId}/collections/{collectionId}:
    get:
      operationId: Collections_read
      description: Get a collection
      parameters:
        - $ref: '#/components/parameters/CollectionKey.userId'
        - $ref: '#/components/parameters/CollectionKey.collectionId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: Collections_update
      description: Update a collection
      parameters:
        - $ref: '#/components/parameters/CollectionKey.userId'
        - $ref: '#/components/parameters/CollectionKey.collectionId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionUpdate'
  /users/{userId}/collections/{collectionId}/bookmarks:
    post:
      operationId: Bookmarks_create
      description: Create a bookmark
      parameters:
        - $ref: '#/components/parameters/BookmarkParentKey.userId'
        - $ref: '#/components/parameters/BookmarkParentKey.collectionId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookmark'
        '201':
          description: Resource create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookmark'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookmarkCreate'
  /users/{userId}/collections/{collectionId}/bookmarks/{bookmarkId}:
    get:
      operationId: Bookmarks_read
      description: Get a bookmark
      parameters:
        - $ref: '#/components/parameters/BookmarkKey.userId'
        - $ref: '#/components/parameters/BookmarkKey.collectionId'
        - $ref: '#/components/parameters/BookmarkKey.bookmarkId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookmark'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: Bookmarks_update
      description: Update a bookmark
      parameters:
        - $ref: '#/components/parameters/BookmarkKey.userId'
        - $ref: '#/components/parameters/BookmarkKey.collectionId'
        - $ref: '#/components/parameters/BookmarkKey.bookmarkId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookmark'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookmarkUpdate'
  /users/{userId}/collections/{collectionId}/children:
    get:
      operationId: Collections_listChildren
      description: List all the children of a collection, including bookmarks and sub-collections.
      parameters:
        - $ref: '#/components/parameters/CollectionKey.userId'
        - $ref: '#/components/parameters/CollectionKey.collectionId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CollectionChildren'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  parameters:
    BookmarkKey.bookmarkId:
      name: bookmarkId
      in: path
      required: true
      description: System-generated unique identifier for the bookmark.
      schema:
        type: string
    BookmarkKey.collectionId:
      name: collectionId
      in: path
      required: true
      description: System-generated unique identifier for the collection.
      schema:
        type: string
    BookmarkKey.userId:
      name: userId
      in: path
      required: true
      description: System-generated unique identifier for the user.
      schema:
        type: string
    BookmarkParentKey.collectionId:
      name: collectionId
      in: path
      required: true
      description: System-generated unique identifier for the collection.
      schema:
        type: string
    BookmarkParentKey.userId:
      name: userId
      in: path
      required: true
      description: System-generated unique identifier for the user.
      schema:
        type: string
    CollectionKey.collectionId:
      name: collectionId
      in: path
      required: true
      description: System-generated unique identifier for the collection.
      schema:
        type: string
    CollectionKey.userId:
      name: userId
      in: path
      required: true
      description: System-generated unique identifier for the user.
      schema:
        type: string
    CollectionParentKey:
      name: userId
      in: path
      required: true
      description: System-generated unique identifier for the user.
      schema:
        type: string
  schemas:
    Bookmark:
      type: object
      required:
        - id
        - url
        - title
        - tags
        - createTime
        - updateTime
      properties:
        id:
          type: string
          description: System-generated unique identifier for the bookmark.
          readOnly: true
        parentId:
          type: string
          description: System-generated unique identifier for the parent collection.
        url:
          type: string
        title:
          type: string
        tags:
          type: array
          items:
            type: string
        createTime:
          type: string
          format: date-time
          readOnly: true
        updateTime:
          type: string
          format: date-time
          readOnly: true
      description: Bookmark is a resource that represents a saved URL.
    BookmarkCreate:
      type: object
      required:
        - url
        - title
        - tags
      properties:
        parentId:
          type: string
          description: System-generated unique identifier for the parent collection.
        url:
          type: string
        title:
          type: string
        tags:
          type: array
          items:
            type: string
      description: Resource create operation model.
    BookmarkUpdate:
      type: object
      properties:
        parentId:
          type: string
          description: System-generated unique identifier for the parent collection.
        title:
          type: string
        tags:
          type: array
          items:
            type: string
      description: Resource create or update operation model.
    Collection:
      type: object
      required:
        - id
        - displayName
        - createTime
        - updateTime
      properties:
        id:
          type: string
          description: System-generated unique identifier for the collection.
          readOnly: true
        parentId:
          type: string
          description: System-generated unique identifier for the parent collection.
        parentCollection:
          type: string
          readOnly: true
        displayName:
          type: string
        description:
          type: string
        createTime:
          type: string
          format: date-time
          readOnly: true
        updateTime:
          type: string
          format: date-time
          readOnly: true
    CollectionChildren:
      type: object
      required:
        - bookmarks
        - collections
      properties:
        bookmarks:
          type: array
          items:
            $ref: '#/components/schemas/Bookmark'
        collections:
          type: array
          items:
            $ref: '#/components/schemas/Collection'
    CollectionCreate:
      type: object
      required:
        - displayName
      properties:
        parentId:
          type: string
          description: System-generated unique identifier for the parent collection.
        displayName:
          type: string
        description:
          type: string
      description: Resource create operation model.
    CollectionUpdate:
      type: object
      properties:
        parentId:
          type: string
          description: System-generated unique identifier for the parent collection.
        displayName:
          type: string
        description:
          type: string
      description: Resource create or update operation model.
    Error:
      type: object
      required:
        - type
        - code
        - message
        - details
      properties:
        type:
          $ref: '#/components/schemas/ErrorType'
        code:
          $ref: '#/components/schemas/ErrorCode'
        message:
          type: string
        details:
          type: object
          additionalProperties: {}
      description: Error is the response model when an API call is unsuccessful.
    ErrorCode:
      type: string
      enum:
        - parameter_invalid
        - parameter_missing
        - processing_error
        - resource_already_exists
        - resource_missing
    ErrorType:
      type: string
      enum:
        - api_error
        - invalid_request_error
    User:
      type: object
      required:
        - id
        - createTime
        - updateTime
      properties:
        id:
          type: string
          description: System-generated unique identifier for the user.
          readOnly: true
        createTime:
          type: string
          format: date-time
          readOnly: true
        updateTime:
          type: string
          format: date-time
          readOnly: true
    Versions:
      type: string
      enum:
        - v1
